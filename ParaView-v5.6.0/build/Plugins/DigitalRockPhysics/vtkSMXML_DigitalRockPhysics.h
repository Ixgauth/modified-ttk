// Loadable modules
//
// Generated by ../../bin/vtkkwProcessXML-pv5.6
//
#ifndef __vtkSMXML_DigitalRockPhysics_h
#define __vtkSMXML_DigitalRockPhysics_h

#include <string.h>
#include <cassert>
#include <algorithm>


// From file /home/ian/ttk/ParaView-v5.6.0/Plugins/DigitalRockPhysics/DigitalRockPhysics.xml
static const char* const DigitalRockPhysicsDigitalRockPhysicsInterfaces0 =
"<ServerManagerConfiguration>\n"
"  <ProxyGroup name=\"filters\">\n"
"   <SourceProxy name=\"AnalyzeMaterialClusters\"\n"
"                class=\"vtkPMaterialClusterAnalysisFilter\"\n"
"                label=\"Analyze Material Clusters\">\n"
"     <Documentation>\n"
"       This filter produces a multiblock dataset that contains two blocks:\n"
"       i/ the second block is a table that contains the volume (number of cells\n"
"       of every cluster) and barycenter of every cluster (set of connected\n"
"       cells that have the same point data material attribute) ;\n"
"       ii/ the first block is the input data image with new point data arrays that\n"
"       correspond to the volume and center of mass of the material cluster it\n"
"       belongs to.\n"
"     </Documentation>\n"
"      <InputProperty command=\"SetInputConnection\"\n"
"                     name=\"Input\">\n"
"        <ProxyGroupDomain name=\"groups\">\n"
"          <Group name=\"sources\" />\n"
"          <Group name=\"filters\" />\n"
"        </ProxyGroupDomain>\n"
"        <DataTypeDomain name=\"input_type\">\n"
"          <DataType value=\"vtkImageData\"/>\n"
"        </DataTypeDomain>\n"
"        <InputArrayDomain name=\"input_array\"\n"
"                          number_of_components=\"1\">\n"
"        </InputArrayDomain>\n"
"        <Documentation>\n"
"          This property specifies the input to the cluster analysis filter.\n"
"        </Documentation>\n"
"      </InputProperty>\n"
"\n"
"      <StringVectorProperty command=\"SetInputArrayToProcess\"\n"
"                            element_types=\"0 0 0 0 2\"\n"
"                            name=\"ClusterLabel\"\n"
"                            number_of_elements=\"5\">\n"
"        <ArrayListDomain attribute_type=\"Scalars\"\n"
"                         name=\"array_list\">\n"
"          <RequiredProperties>\n"
"            <Property function=\"Input\"\n"
"                      name=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </ArrayListDomain>\n"
"        <FieldDataDomain name=\"field_list\">\n"
"          <RequiredProperties>\n"
"            <Property function=\"Input\"\n"
"                      name=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </FieldDataDomain>\n"
"        <Documentation>\n"
"          The value of this property contains the name of the scalar array that\n"
"          contains material labels.\n"
"       </Documentation>\n"
"      </StringVectorProperty>\n"
"\n"
"      <IntVectorProperty name=\"RockfillLabel\"\n"
"                         command=\"SetRockfillLabel\"\n"
"                         animateable=\"1\"\n"
"                         default_values=\"0\"\n"
"                         number_of_elements=\"1\">\n"
"        <Documentation>\n"
"          The value of this property determines what material should be considered\n"
"          as the rockfill. Volume of rockfill material will not be computed.\n"
"        </Documentation>\n"
"      </IntVectorProperty>\n"
"\n"
"      <OutputPort index=\"0\"\n"
"                  name=\"ImageData\"/>\n"
"      <OutputPort index=\"1\"\n"
"                  name=\"Table of Volumes\"/>\n"
"\n"
"      <Hints>\n"
"        <ShowInMenu category=\"Digital Rock Physics\" />\n"
"        <View type=\"None\" port=\"1\" />\n"
"      </Hints>\n"
"   <!-- End AnalyzeMaterialClusters -->\n"
"   </SourceProxy>\n"
"\n"
"   <SourceProxy name=\"ExplodeMaterialClusters\"\n"
"                class=\"vtkPMaterialClusterExplodeFilter\"\n"
"                label=\"Explode Material Clusters\">\n"
"     <Documentation>\n"
"       This filter creates an exploded surface mesh of the clusters (set of connected\n"
"       cells that have the same material attribute) described in the input image data.\n"
"       This filter requires an initial analysis of the input data with the\n"
"       MaterialClusterAnalysis filter. If input is not the output of this filter\n"
"       (ie. it does not contain the metadata produced by this filter, the cluster centers\n"
"       in particular), then the filter will be called internally first.\n"
"     </Documentation>\n"
"      <InputProperty command=\"SetInputConnection\"\n"
"                     name=\"Input\">\n"
"        <ProxyGroupDomain name=\"groups\">\n"
"          <Group name=\"sources\" />\n"
"          <Group name=\"filters\" />\n"
"        </ProxyGroupDomain>\n"
"        <DataTypeDomain name=\"input_type\">\n"
"          <DataType value=\"vtkImageData\"/>\n"
"        </DataTypeDomain>\n"
"        <InputArrayDomain name=\"input_array\"\n"
"                          number_of_components=\"1\">\n"
"        </InputArrayDomain>\n"
"        <Documentation>\n"
"          This property specifies the input to the filter.\n"
"        </Documentation>\n"
"      </InputProperty>\n"
"\n"
"      <StringVectorProperty command=\"SetInputArrayToProcess\"\n"
"                            element_types=\"0 0 0 0 2\"\n"
"                            name=\"ClusterLabel\"\n"
"                            number_of_elements=\"5\">\n"
"        <ArrayListDomain attribute_type=\"Scalars\"\n"
"                         name=\"array_list\">\n"
"          <RequiredProperties>\n"
"            <Property function=\"Input\"\n"
"                      name=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </ArrayListDomain>\n"
"        <FieldDataDomain name=\"field_list\">\n"
"          <RequiredProperties>\n"
"            <Property function=\"Input\"\n"
"                      name=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </FieldDataDomain>\n"
"        <Documentation>\n"
"          The value of this property contains the name of the scalar array that\n"
"          contains material labels.\n"
"        </Documentation>\n"
"      </StringVectorProperty>\n"
"\n"
"      <DoubleVectorProperty name=\"ExplodeFactor\"\n"
"                            command=\"SetExplodeFactor\"\n"
"                            animateable=\"1\"\n"
"                            default_values=\"1\"\n"
"                            number_of_elements=\"1\">\n"
"        <DoubleRangeDomain max=\"100\"\n"
"                           min=\"0\"\n"
"                           name=\"range\" />\n"
"        <Documentation>\n"
"          The value of this property determines how far the points will be moved.\n"
"          The cluster points will be translated by this value times the vector\n"
"          that goes from the dataset center to the cluster barycenter.\n"
"        </Documentation>\n"
"      </DoubleVectorProperty>\n"
"\n"
"      <IntVectorProperty name=\"RockfillLabel\"\n"
"                         command=\"SetRockfillLabel\"\n"
"                         animateable=\"1\"\n"
"                         default_values=\"0\"\n"
"                         number_of_elements=\"1\">\n"
"        <Documentation>\n"
"          The value of this property determines what material should be considered\n"
"          as the rockfill. Rockfill material surface will not be exploded/computed.\n"
"        </Documentation>\n"
"      </IntVectorProperty>\n"
"\n"
"      <Hints>\n"
"        <ShowInMenu category=\"Digital Rock Physics\" />\n"
"      </Hints>\n"
"   <!-- End ExplodeMaterialClusters -->\n"
"   </SourceProxy>\n"
"\n"
" </ProxyGroup>\n"
"</ServerManagerConfiguration>\n"
"\n";
// Get single string
char* DigitalRockPhysicsDigitalRockPhysicsInterfaces()
{

  const size_t len0 = strlen(DigitalRockPhysicsDigitalRockPhysicsInterfaces0);
  size_t len = ( 0
    + len0 );
  char* res = new char[ len + 1];
  size_t offset = 0;
  std::copy(DigitalRockPhysicsDigitalRockPhysicsInterfaces0, DigitalRockPhysicsDigitalRockPhysicsInterfaces0 + len0, res + offset); offset += len0;
  assert(offset == len);
  res[offset] = 0;
  return res;
}



#endif
