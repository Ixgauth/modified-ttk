// Loadable modules
//
// Generated by ../../bin/vtkkwProcessXML-pv5.6
//
#ifndef __vtkSMXML_GeodesicMeasurement_h
#define __vtkSMXML_GeodesicMeasurement_h

#include <string.h>
#include <cassert>
#include <algorithm>


// From file /home/ian/ttk/ParaView-v5.6.0/Plugins/GeodesicMeasurementPlugin/GeodesicMeasurement.xml
static const char* const GeodesicMeasurementGeodesicMeasurementInterfaces0 =
"<ServerManagerConfiguration>\n"
"  <ProxyGroup name=\"filters\">\n"
"    <SourceProxy name=\"GeodesicMeasurement\"\n"
"                 class=\"vtkGeodesicsBetweenPoints\"\n"
"                 label=\"Geodesic Measurement\">\n"
"      <Documentation\n"
"          long_help=\"\"\n"
"          short_help=\"\">\n"
"      </Documentation>\n"
"      <InputProperty\n"
"          name=\"Input\"\n"
"          command=\"SetInputConnection\">\n"
"        <ProxyGroupDomain name=\"groups\">\n"
"          <Group name=\"sources\"/>\n"
"          <Group name=\"filters\"/>\n"
"        </ProxyGroupDomain>\n"
"        <DataTypeDomain name=\"input_type\">\n"
"          <DataType value=\"vtkPolyData\"/>\n"
"        </DataTypeDomain>\n"
"      </InputProperty>\n"
"      <InputProperty command=\"SetEndpointsConnection\"\n"
"                     name=\"Endpoints\"\n"
"                     panel_visibility=\"default\">\n"
"        <ProxyGroupDomain name=\"groups\">\n"
"          <Group name=\"sources\" />\n"
"          <Group name=\"filters\" />\n"
"        </ProxyGroupDomain>\n"
"        <DataTypeDomain name=\"input_type\">\n"
"          <DataType value=\"vtkPointSet\" />\n"
"        </DataTypeDomain>\n"
"        <Documentation>The input that provides the endpoints between\n"
"        which geodesic paths will be computed.\n"
"        </Documentation>\n"
"      </InputProperty>\n"
"      <IntVectorProperty command=\"SetLoop\"\n"
"                         name=\"Loop\"\n"
"                         label=\"Create Loop\"\n"
"                         number_of_elements=\"1\"\n"
"                         default_values=\"0\">\n"
"        <BooleanDomain name=\"bool\"/>\n"
"        <Documentation>\n"
"          If on, enables loop creation by computing a path from the\n"
"          last point to first point in the endpoints.\n"
"        </Documentation>\n"
"      </IntVectorProperty>\n"
"      <IntVectorProperty command=\"SetLoopWithLine\"\n"
"                         name=\"LoopWithLine\"\n"
"                         label=\"Create Loop with Line\"\n"
"                         number_of_elements=\"1\"\n"
"                         default_values=\"0\">\n"
"        <BooleanDomain name=\"bool\"/>\n"
"        <Documentation>\n"
"          If on and if Create Loop is on, uses a straight line segment\n"
"          to connect the last point to the first point in the endpoints.\n"
"        </Documentation>\n"
"        <Hints>\n"
"          <PropertyWidgetDecorator type=\"EnableWidgetDecorator\">\n"
"            <Property name=\"Loop\" function=\"boolean\" index=\"0\" />\n"
"          </PropertyWidgetDecorator>\n"
"        </Hints>\n"
"      </IntVectorProperty>\n"
"    </SourceProxy>\n"
"  </ProxyGroup>\n"
"  <ProxyGroup name=\"filters\">\n"
"    <SourceProxy name=\"FastMarchingGeodesicDistanceField\"\n"
"                 class=\"vtkFastMarchingGeodesicDistance\"\n"
"                 label=\"Fast-Marching Geodesic Distance-Field From Binary Field\">\n"
"      <Documentation\n"
"          short_help=\"Compute the distances to a set of seeds.\"\n"
"          long_help=\"Compute the distance of points of the mesh to chosen seeds\">\n"
"          Compute the distance of each point of the mesh to a set of seeds\n"
"          defined as points with non-zero value. Internal Fast-Marching-Method\n"
"          plugin is used for computational efficiency.\n"
"      </Documentation>\n"
"      <InputProperty name=\"Input\" command=\"SetInputConnection\">\n"
"        <ProxyGroupDomain name=\"groups\">\n"
"          <Group name=\"sources\"/>\n"
"          <Group name=\"filters\"/>\n"
"        </ProxyGroupDomain>\n"
"        <DataTypeDomain name=\"input_type\">\n"
"          <DataType value=\"vtkPolyData\"/>\n"
"        </DataTypeDomain>\n"
"        <InputArrayDomain name=\"SeedsNonZeroField\"\n"
"                          number_of_components=\"1\"\n"
"                          optional=\"0\" />\n"
"        <InputArrayDomain name=\"IsotropicMetricTensorLength\"\n"
"                          number_of_components=\"1\"\n"
"                          optional=\"1\" />\n"
"      </InputProperty>\n"
"      <StringVectorProperty command=\"SetInputArrayToProcess\"\n"
"                            default_values=\"0\"\n"
"                            element_types=\"0 0 0 0 2\"\n"
"                            name=\"SeedsNonZeroField\"\n"
"                            label=\"Seeds Non-Zero Field\"\n"
"                            optional=\"0\"\n"
"                            number_of_elements=\"5\">\n"
"        <ArrayListDomain attribute_type=\"Scalars\"\n"
"                         input_domain_name=\"SeedsNonZeroField\"\n"
"                         name=\"array_list\"\n"
"                         none_string=\"None\">\n"
"          <RequiredProperties>\n"
"            <Property function=\"Input\"\n"
"                      name=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </ArrayListDomain>\n"
"        <FieldDataDomain name=\"field_list\">\n"
"          <RequiredProperties>\n"
"            <Property function=\"Input\"\n"
"                      name=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </FieldDataDomain>\n"
"        <Documentation>\n"
"        Select the input array to be treated as defining seeds.\n"
"        A point having a non-zero value will be considered as being a seed.\n"
"        </Documentation>\n"
"      </StringVectorProperty>\n"
"      <StringVectorProperty command=\"SetInputArrayToProcess\"\n"
"                            default_values=\"1\"\n"
"                            element_types=\"0 0 0 0 2\"\n"
"                            name=\"IsotropicMetricTensorLength\"\n"
"                            number_of_elements=\"5\">\n"
"        <ArrayListDomain attribute_type=\"Scalars\"\n"
"                         input_domain_name=\"IsotropicMetricTensorLength\"\n"
"                         name=\"array_list\"\n"
"                         none_string=\"None\">\n"
"          <RequiredProperties>\n"
"            <Property function=\"Input\" name=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </ArrayListDomain>\n"
"        <FieldDataDomain name=\"field_list\">\n"
"          <RequiredProperties>\n"
"            <Property function=\"Input\" name=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </FieldDataDomain>\n"
"        <Documentation>Select the input array to be treated as the Metric\n"
"        Tensor.It can only be an isometric tensor, and the selected field should\n"
"        contain the length of the metric tensor at each polydata point.\n"
"        </Documentation>\n"
"      </StringVectorProperty>\n"
"      <StringVectorProperty command=\"SetFieldDataName\"\n"
"                            default_values=\"DistanceField\"\n"
"                            name=\"OutputFieldName\">\n"
"        <Documentation>\n"
"        Set the output field name.\n"
"        </Documentation>\n"
"      </StringVectorProperty>\n"
"    </SourceProxy>\n"
"  </ProxyGroup>\n"
"</ServerManagerConfiguration>\n"
"\n";
// Get single string
char* GeodesicMeasurementGeodesicMeasurementInterfaces()
{

  const size_t len0 = strlen(GeodesicMeasurementGeodesicMeasurementInterfaces0);
  size_t len = ( 0
    + len0 );
  char* res = new char[ len + 1];
  size_t offset = 0;
  std::copy(GeodesicMeasurementGeodesicMeasurementInterfaces0, GeodesicMeasurementGeodesicMeasurementInterfaces0 + len0, res + offset); offset += len0;
  assert(offset == len);
  res[offset] = 0;
  return res;
}



#endif
