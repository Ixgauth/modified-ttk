// Loadable modules
//
// Generated by ../../bin/vtkkwProcessXML-pv5.6
//
#ifndef __vtkSMXML_Moments_h
#define __vtkSMXML_Moments_h

#include <string.h>
#include <cassert>
#include <algorithm>


// From file /home/ian/ttk/ParaView-v5.6.0/Plugins/Moments/Moments.xml
static const char* const MomentsMomentsInterfaces0 =
"<ServerManagerConfiguration>\n"
"  <ProxyGroup name=\"filters\">\n"
"\n"
"    <SourceProxy name=\"MomentVectors\" class=\"vtkMomentVectors\"\n"
"                 label=\"Moment Vectors\">\n"
"      <Documentation short_help=\"Create flux or circulation vectors.\"\n"
"                     long_help=\"Convert scalars to flux or circulation vectors.\">\n"
"        Often times a simulation that computes circulation or flux in a\n"
"        mesh will simply write out the scalar that represents the amount of\n"
"        movement and the direction is implied by the normal of the surface\n"
"        cell (for flux) or the direction of the line cell (for\n"
"        circulation).  The array values associated with the 2D and 1D\n"
"        geometric elements will be converted to a vector pointing in the\n"
"        direction of the flow.\n"
"      </Documentation>\n"
"\n"
"      <InputProperty name=\"Input\" command=\"SetInputConnection\">\n"
"        <ProxyGroupDomain name=\"groups\">\n"
"          <Group name=\"sources\" />\n"
"          <Group name=\"filters\" />\n"
"        </ProxyGroupDomain>\n"
"        <DataTypeDomain name=\"input_type\">\n"
"          <DataType value=\"vtkDataSet\" />\n"
"        </DataTypeDomain>\n"
"        <InputArrayDomain name=\"input_array\"\n"
"                          attribute_type=\"cell\"\n"
"                          number_of_components=\"1\">\n"
"        </InputArrayDomain>\n"
"        <Documentation>\n"
"          The input to the filter.\n"
"        </Documentation>\n"
"      </InputProperty>\n"
"\n"
"      <StringVectorProperty name=\"SelectInputScalars\"\n"
"                            command=\"SetInputArrayToProcess\"\n"
"                            number_of_elements=\"5\"\n"
"                            element_types=\"0 0 0 0 2\"\n"
"                            label=\"Flux/Circulation Array\">\n"
"        <ArrayListDomain name=\"array_list\" attribute_type=\"Scalars\">\n"
"          <RequiredProperties>\n"
"            <Property name=\"Input\" function=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </ArrayListDomain>\n"
"        <FieldDataDomain name=\"field_list\">\n"
"          <RequiredProperties>\n"
"            <Property name=\"Input\" function=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </FieldDataDomain>\n"
"        <Documentation>\n"
"          The name of the scalar array that represents flux through a 2D\n"
"          element or circulation along a 1D element.  This array will be\n"
"          converted to a vector pointing in the direction the flow or\n"
"          circulation is moving.\n"
"        </Documentation>\n"
"      </StringVectorProperty>\n"
"\n"
"      <IntVectorProperty name=\"InputMomentIsDensity\"\n"
"                         command=\"SetInputMomentIsDensity\"\n"
"                         number_of_elements=\"1\"\n"
"                         default_values=\"0\"\n"
"                         label=\"Input Moment Is Density\">\n"
"        <BooleanDomain name=\"bool\" />\n"
"        <Documentation>\n"
"          If off, then the input array is taken to be the total flux\n"
"          through or circulation along each element.  If on, then the input\n"
"          array is taken to be the density of the flux or circulation.\n"
"        </Documentation>\n"
"      </IntVectorProperty>\n"
"    </SourceProxy> <!-- Moment Vectors -->\n"
"\n"
"    <SourceProxy name=\"MomentGlyphs\" class=\"vtkMomentGlyphs\"\n"
"                 label=\"Moment Glyphs\">\n"
"      <Documentation short_help=\"Create flux or circulation glyphs.\"\n"
"                     long_help=\"Create glyphs pointing in the direction of flux or circulation.\">\n"
"        Circulation is a vector field on 1D cells that represents flow\n"
"        along the path of the cell.  Flux is a vector field on 2D cells\n"
"        that represents flow through the area of the cell.  This filter\n"
"        creates arrow glyphs in the direction of the flow.  The array\n"
"        values associated with the 2D and 1D geometric elements will be\n"
"        converted to a vector pointing in the direction of the flow.\n"
"      </Documentation>\n"
"\n"
"      <InputProperty name=\"Input\" command=\"SetInputConnection\">\n"
"        <ProxyGroupDomain name=\"groups\">\n"
"          <Group name=\"sources\" />\n"
"          <Group name=\"filters\" />\n"
"        </ProxyGroupDomain>\n"
"        <DataTypeDomain name=\"input_type\">\n"
"          <DataType value=\"vtkDataSet\" />\n"
"        </DataTypeDomain>\n"
"        <InputArrayDomain name=\"input_array\"\n"
"                          attribute_type=\"cell\">\n"
"        </InputArrayDomain>\n"
"        <Documentation>\n"
"          The input to the filter.\n"
"        </Documentation>\n"
"      </InputProperty>\n"
"\n"
"      <StringVectorProperty name=\"SelectInputScalars\"\n"
"                            command=\"SetInputArrayToProcess\"\n"
"                            number_of_elements=\"5\"\n"
"                            element_types=\"0 0 0 0 2\"\n"
"                            label=\"Flux/Circulation Array\">\n"
"        <ArrayListDomain name=\"array_list\" attribute_type=\"Scalars\">\n"
"          <RequiredProperties>\n"
"            <Property name=\"Input\" function=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </ArrayListDomain>\n"
"        <FieldDataDomain name=\"field_list\">\n"
"          <RequiredProperties>\n"
"            <Property name=\"Input\" function=\"Input\" />\n"
"          </RequiredProperties>\n"
"        </FieldDataDomain>\n"
"        <Documentation>\n"
"          The name of the scalar or vector array that represents flux\n"
"          through a 2D element or circulation along a 1D element.  If\n"
"          necessary, this array will be converted to a vector pointing in\n"
"          the direction the flow or circulation is moving.\n"
"        </Documentation>\n"
"      </StringVectorProperty>\n"
"\n"
"      <IntVectorProperty name=\"InputMomentIsDensity\"\n"
"                         command=\"SetInputMomentIsDensity\"\n"
"                         number_of_elements=\"1\"\n"
"                         default_values=\"0\"\n"
"                         label=\"Input Moment Is Density\">\n"
"        <BooleanDomain name=\"bool\" />\n"
"        <Documentation>\n"
"          If off, then the input array is taken to be the total flux\n"
"          through or circulation along each element.  If on, then the input\n"
"          array is taken to be the density of the flux or circulation.\n"
"        </Documentation>\n"
"      </IntVectorProperty>\n"
"\n"
"      <IntVectorProperty name=\"ScaleByDenisty\"\n"
"                         command=\"SetScaleByDensity\"\n"
"                         number_of_elements=\"1\"\n"
"                         default_values=\"0\"\n"
"                         label=\"Scale By Density\">\n"
"        <BooleanDomain name=\"bool\" />\n"
"        <Documentation>\n"
"          If off, then the glyphs are scaled by the total flux through or\n"
"          circulation along each element.  If on, then the glyphs are\n"
"          scaled by the flux or circulation density.\n"
"        </Documentation>\n"
"      </IntVectorProperty>\n"
"    </SourceProxy> <!-- Moment Glyphs -->\n"
"\n"
"  </ProxyGroup>\n"
"</ServerManagerConfiguration>\n"
"\n";
// Get single string
char* MomentsMomentsInterfaces()
{

  const size_t len0 = strlen(MomentsMomentsInterfaces0);
  size_t len = ( 0
    + len0 );
  char* res = new char[ len + 1];
  size_t offset = 0;
  std::copy(MomentsMomentsInterfaces0, MomentsMomentsInterfaces0 + len0, res + offset); offset += len0;
  assert(offset == len);
  res[offset] = 0;
  return res;
}



#endif
