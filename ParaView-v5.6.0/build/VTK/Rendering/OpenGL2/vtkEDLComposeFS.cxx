#include "vtkEDLComposeFS.h"

const char *vtkEDLComposeFS =
"//VTK::System::Dec\n"
"\n"
"/*=========================================================================\n"
"\n"
"   Program: VTK\n"
"   Module:  vtkEDLComposeFS.glsl\n"
"\n"
"   Copyright (c) 2005-2008 Sandia Corporation, Kitware Inc.\n"
"   All rights reserved.\n"
"\n"
"   ParaView is a free software; you can redistribute it and/or modify it\n"
"   under the terms of the ParaView license version 1.2.\n"
"\n"
"   See License_v1.2.txt for the full ParaView license.\n"
"   A copy of this license can be obtained by contacting\n"
"   Kitware Inc.\n"
"   28 Corporate Drive\n"
"   Clifton Park, NY 12065\n"
"   USA\n"
"\n"
"THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n"
"``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n"
"LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n"
"A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OR\n"
"CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n"
"EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n"
"PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n"
"PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n"
"LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n"
"NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n"
"SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
"\n"
"=========================================================================*/\n"
"/*----------------------------------------------------------------------\n"
"Acknowledgement:\n"
"This algorithm is the result of joint work by Electricité de France,\n"
"CNRS, Collège de France and Université J. Fourier as part of the\n"
"Ph.D. thesis of Christian BOUCHENY.\n"
"------------------------------------------------------------------------*/\n"
"//////////////////////////////////////////////////////////////////////////\n"
"//\n"
"//\n"
"//  EyeDome Lighting - Compositing - Simplified version for use in VTK\\n\n"
"//\n"
"//    C.B. - 3 feb. 2009\n"
"//\n"
"//////////////////////////////////////////////////////////////////////////\n"
"\n"
"// the output of this shader\n"
"//VTK::Output::Dec\n"
"\n"
"in vec2 tcoordVC;\n"
"\n"
"/**************************************************/\n"
"uniform sampler2D    s2_S1;  // fine scale\n"
"uniform sampler2D    s2_S2;  // larger medium scale\n"
"uniform sampler2D    s2_C;   // scene color image\n"
"/**************************************************/\n"
"\n"
"void main (void)\n"
"{\n"
"  vec4 shade1  =  texture2D(s2_S1,tcoordVC.st);\n"
"  vec4 shade2  =  texture2D(s2_S2,tcoordVC.st);\n"
"  vec4  color   =  texture2D(s2_C,tcoordVC.st);\n"
"\n"
"  // if it is the background (ala depth > 0.99) just copy it\n"
"  //if(shade1.a > 0.99)\n"
"  //  {\n"
"  //  gl_FragData[0] = vec4(shade1.rgb,1.) * color;\n"
"  //  }\n"
"  //else\n"
"  //  {\n"
"    float lum = mix(shade1.r,shade2.r,0.3);\n"
"    gl_FragData[0] = vec4(color.rgb*lum, color.a);\n"
"  //  }\n"
"\n"
"  gl_FragDepth = shade1.a; // write stored depth\n"
"}\n"
"";
