// Generated by vtkWrapPythonInit in VTK/Wrapping
#include "vtkPython.h"
#include "vtkPythonCompatibility.h"
#include "vtkSystemIncludes.h"
#include <string.h>
// Handle compiler warning messages, etc.
#if defined( _MSC_VER ) && !defined(VTK_DISPLAY_WIN32_WARNINGS)
#pragma warning ( disable : 4706 )
#endif // Windows Warnings

extern  "C" {VTK_ABI_EXPORT PyObject *PyVTKAddFile_vtkContextView(PyObject *); }
extern  "C" {VTK_ABI_EXPORT PyObject *PyVTKAddFile_vtkContextInteractorStyle(PyObject *); }

static PyMethodDef PyvtkViewsContext2DPython_Methods[] = {
{nullptr, nullptr, 0, nullptr}};

#ifdef VTK_PY3K
static PyModuleDef PyvtkViewsContext2DPython_Module = {
  PyModuleDef_HEAD_INIT,
  "vtkViewsContext2DPython", // m_name
  nullptr, // m_doc
  0, // m_size
  PyvtkViewsContext2DPython_Methods, //m_methods
  nullptr, // m_reload
  nullptr, // m_traverse
  nullptr, // m_clear
  nullptr  // m_free
};
#endif

extern  "C" {VTK_ABI_EXPORT PyObject *real_initvtkViewsContext2DPython(const char *); }

PyObject *real_initvtkViewsContext2DPython(const char *)
{
#ifdef VTK_PY3K
  PyObject *m = PyModule_Create(&PyvtkViewsContext2DPython_Module);
#else

  PyObject *m = Py_InitModule("vtkViewsContext2DPython",
                              PyvtkViewsContext2DPython_Methods);
#endif

  PyObject *d = PyModule_GetDict(m);
  if (!d)
  {
    Py_FatalError("can't get dictionary for module vtkViewsContext2DPython");
  }
  PyVTKAddFile_vtkContextView(d);
  PyVTKAddFile_vtkContextInteractorStyle(d);

  return m;
}

