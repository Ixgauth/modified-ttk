#------------------------------------------------------------------------------
#  AppVeyor Continous Integration (CI) configuration file
#
# Configures a Windows-like environment for building TTK on AppVeyor.
#
# Only VTK is being built the first time to ensure the build time is less
# than appveyor's 1 hour limit. VTK is then cached and retrieved at the
# beginning of every TTK build.
# To reduce build time, VTK is built with the option BUILD_TESTING set to OFF.
#
# The VTKData target is also built appart from TTK as many network errors could
# occur on appveyor. If a network error occurs, preventing VTK to fetch its
# test data, then the appveyor-retry command will re-build this target up to
# three times.

# Target platform
platform:
  - x64

environment:
  # Environment variables
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  VTK_VERSION: v8.1.1
  VTK_SOURCE_DIR: "C:/projects/VTK"
  VTK_BINARY_DIR: "C:/projects/VTK-build"
  BOOST_VERSION: boost-1.65.0
  BOOST_SOURCE_DIR: "C:/projects/boost_1_67_0"
  BUILD_TYPE: Release
  CTEST_SOURCE_DIRECTORY: "%APPVEYOR_BUILD_FOLDER%"
  CTEST_BINARY_DIRECTORY: "%APPVEYOR_BUILD_FOLDER%/build"
  CTEST_CMAKE_GENERATOR: "Visual Studio 14 2015 Win64"
  CTEST_TEST_TIMEOUT: "300"
  CTEST_BUILD_CONFIGURATION: Release
  CTEST_CONFIGURATION_TYPE: Release

  # Build matrix. (defines different configuration for multiple jobs)
  matrix:
    - GENERATOR: "%CTEST_CMAKE_GENERATOR%"

cache:
  # Caching VTK source and build tree
  - '%BOOST_SOURCE_DIR%'
#  - '%VTK_SOURCE_DIR%'
#  - '%VTK_BINARY_DIR%'

build:
  parallel: true
  verbosity: minimal
  project: C:/projects/ttk/build/ttk.sln

before_build:
  # Checkout Boost source tree
  - if not exist "%BOOST_SOURCE_DIR%" (
      cd C:/projects/ &
      bitsadmin /transfer myDownloadJob /download /priority normal https://dl.bintray.com/boostorg/release/1.67.0/source/boost_1_67_0.zip c:\projects\boost_1_67_0.zip &
      unzip boost_1_67_0.zip
    )
  # Checkout VTK source tree
#  - if not exist "%VTK_SOURCE_DIR%" (
#      cd C:/projects/ &
#      git clone --depth 1 --branch %VTK_VERSION% https://github.com/Kitware/VTK.git VTK
#    )
  # Build VTK
#  - if not exist "%VTK_BINARY_DIR%" (
#      cd C:/projects/ &
#      mkdir "%VTK_BINARY_DIR%" & cd "%VTK_BINARY_DIR%" & cmake -G "%GENERATOR%" -DBUILD_TESTING:BOOL=OFF -DVTK_Group_StandAlone=ON -DHDF5_ENABLE_DIRECT_VFD=OFF -DHDF5_ENABLE_EMBEDDED_LIBINFO=OFF -DHDF5_USE_FOLDERS=OFF -DVTK_USE_X=OFF ../VTK & cmake --build . --config %BUILD_TYPE%  
#    )
  
  - cd "%APPVEYOR_BUILD_FOLDER%" & mkdir build & cd build
  # Fetch ExternalData. (Retried up to 3 times if network errors occured)
  - cmake -G"%CTEST_CMAKE_GENERATOR%" -DVTK_DIR="%VTK_BINARY_DIR%" "%APPVEYOR_BUILD_FOLDER%" -DBoost_INCLUDE_DIR="%BOOST_SOURCE_DIR%" -DTTK_BUILD_PARAVIEW_PLUGINS=OFF -DTTK_BUILD_VTK_WRAPPERS=OFF  -DTTK_ENABLE_OPENMP=OFF -DCMAKE_BUILD_TYPE=%BUILD_TYPE% -DTTK_BUILD_STANDALONE_APPS=OFF 

build_script:
  - cd "%APPVEYOR_BUILD_FOLDER%" & cd build
  - cmake --build . --config %BUILD_TYPE% --target INSTALL

test: off

deploy: off

