
<ServerManagerConfiguration>
  <!-- This is the server manager configuration XML. It defines the interface to
       our new filter. As a rule of thumb, try to locate the configuration for
       a filter already in ParaView (in Servers/ServerManager/Resources/*.xml)
       that matches your filter and then model your xml on it -->
  <ProxyGroup name="filters">
    <SourceProxy
      name="DiscreteGradient"
      class="ttkDiscreteGradient"
      label="TTK DiscreteGradient">
      <Documentation
        long_help="TTK discreteGradient plugin."
        short_help="TTK discreteGradient plugin.">
        TTK discreteGradient plugin documentation.
      </Documentation>
      <InputProperty
        name="Input"
        command="SetInputConnection">
        <ProxyGroupDomain name="groups">
          <Group name="sources"/>
          <Group name="filters"/>
        </ProxyGroupDomain>
        <DataTypeDomain name="input_type">
          <DataType value="vtkDataSet"/>
        </DataTypeDomain>
        <InputArrayDomain name="input_scalars" number_of_components="1">
          <Property name="Input" function="FieldDataSelection" />
        </InputArrayDomain>
        <Documentation>
          Data-set to process.
          TTK assumes that the input dataset is made of only one connected component.
          If it's not the case, you can use the filter "Connectivity" (and select "Extract Largest Region").
        </Documentation>
      </InputProperty>

      <StringVectorProperty
        name="ScalarField"
        command="SetScalarField"
        number_of_elements="1"
        animateable="0"
        label="Scalar Field"
        >
        <ArrayListDomain
          name="array_list"
          default_values="0">
          <RequiredProperties>
            <Property name="Input" function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Documentation>
          Select the scalar field to process.
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty
        name="ForceInputOffsetScalarField"
        command="SetForceInputOffsetScalarField"
        label="Force Input Offset Field"
        number_of_elements="1"
        panel_visibility="advanced"
        default_values="0">
        <BooleanDomain name="bool"/>
        <Documentation>
          Check this box to force the usage of a specific input scalar field 
          as vertex offset (used to disambiguate flat plateaus).
        </Documentation>
      </IntVectorProperty>

      <StringVectorProperty
        name="InputOffsetScalarFieldName"
        command="SetInputOffsetScalarFieldName"
        label="Input Offset Field"
        number_of_elements="1"
        animateable="0"
        panel_visibility="advanced"
        >
        <ArrayListDomain
          name="array_list"
          default_values="0"
          >
          <RequiredProperties>
            <Property name="Input" function="Input" />
          </RequiredProperties>
        </ArrayListDomain>
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
            mode="visibility"
            property="ForceInputOffsetScalarField"
            value="1" />
        </Hints>
        <Documentation>
          Select the input offset field (to disambiguate flat plateaus).
        </Documentation>
      </StringVectorProperty>

      <IntVectorProperty name="AllowSecondPass"
        label="Allow Second Pass"
        command="SetAllowSecondPass"
        number_of_elements="1"
        default_values="1"
        panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Documentation>
          Allow a second pass in the gradient reversal algorithm.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="AllowThirdPass"
        label="Allow Third Pass"
        command="SetAllowThirdPass"
        number_of_elements="1"
        default_values="1"
        panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Documentation>
          Allow a third pass in the gradient reversal algorithm.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="ReverseSaddleMaximumConnection"
        label="PL-compliant extrema"
        command="SetReverseSaddleMaximumConnection"
        number_of_elements="1"
        default_values="1"
        panel_visibility="default">
        <BooleanDomain name="bool"/>
        <Documentation>
          Documentation.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="ReverseSaddleSaddleConnection"
        label="PL-compliant saddles"
        command="SetReverseSaddleSaddleConnection"
        number_of_elements="1"
        default_values="1"
        panel_visibility="default">
        <BooleanDomain name="bool"/>
        <Documentation>
          Documentation.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="ComputeGradientGlyphs"
        label="Compute Gradient Glyphs"
        command="SetComputeGradientGlyphs"
        number_of_elements="1"
        default_values="1"
        panel_visibility="default">
        <BooleanDomain name="bool"/>
        <Documentation>
          Compute the gradient glyphs.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="UseAllCores"
        label="Use All Cores"
        command="SetUseAllCores"
        number_of_elements="1"
        default_values="1" panel_visibility="advanced">
        <BooleanDomain name="bool"/>
        <Documentation>
          Use all available cores.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="ThreadNumber"
        label="Thread Number"
        command="SetThreadNumber"
        number_of_elements="1"
        default_values="1" panel_visibility="advanced">
        <IntRangeDomain name="range" min="1" max="100" />
        <Hints>
          <PropertyWidgetDecorator type="GenericDecorator"
            mode="visibility"
            property="UseAllCores"
            value="0" />
        </Hints>

        <Documentation>
          Thread number.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty
        name="DebugLevel"
        label="Debug Level"
        command="SetdebugLevel_"
        number_of_elements="1"
        default_values="3" panel_visibility="advanced">
        <IntRangeDomain name="range" min="0" max="100" />
        <Documentation>
          Debug level.
        </Documentation>
      </IntVectorProperty>

      <IntVectorProperty name="IterationThreshold"
        label="Iteration Threshold"
        command="SetIterationThreshold"
        number_of_elements="1"
        default_values="-1"
        panel_visibility="advanced">
        <IntRangeDomain name="range" min="0" max="100" />
        <Documentation>
          Iteration threshold.
        </Documentation>
      </IntVectorProperty>

      <PropertyGroup panel_widget="Line" label="Input options">
        <Property name="ScalarField" />
        <Property name="ForceInputOffsetScalarField"/>
        <Property name="InputOffsetScalarFieldName"/>
        <Property name="AllowSecondPass"/>
        <Property name="AllowThirdPass"/>
        <Property name="ReverseSaddleMaximumConnection"/>
        <Property name="ReverseSaddleSaddleConnection"/>
        <Property name="ComputeGradientGlyphs"/>
      </PropertyGroup>

      <PropertyGroup panel_widget="Line" label="Testing">
        <Property name="UseAllCores" />
        <Property name="ThreadNumber" />
        <Property name="DebugLevel" />
        <Property name="IterationThreshold"/>
      </PropertyGroup>

      <OutputPort name="Critical Points" index="0" id="port0"/>
      <OutputPort name="Gradient Glyphs" index="1" id="port1"/>

      <Hints>
        <ShowInMenu category="TTK - Scalar Data" />
      </Hints>
    </SourceProxy>
  </ProxyGroup>
</ServerManagerConfiguration>
